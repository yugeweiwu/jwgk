buildscript {
    ext {
        springBootVersion = '1.5.13.RELEASE'
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.7'
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.2.4"
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

compileJava { options.encoding = "UTF-8" }

group = 'com.gkyt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/snippets"))
}

flyway {
    url = 'jdbc:mysql://localhost:32778/infrastructure?useUnicode=true&useSSL=false&serverTimezone=UTC'
    user = 'root'
    password = 'Password@1'
}

task unitTest(group: 'tests', type: Test) {
    useJUnit {
        include '**/*UnitTest.class'
    }
}

sourceSets {
    test {
        java {
            srcDirs = [
                    'src/test/unit/java',
            ]
        }
        resources {
            srcDirs = [
                    'src/test/unit/resources',
            ]
        }
    }
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    sources {
        include 'index.adoc'
        include 'error.adoc'
    }
    outputDir = file('build/docs')
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}

jar {
    baseName = 'project-jwgk'
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    compileOnly('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    compile('org.modelmapper:modelmapper:1.1.3')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    compile('org.flywaydb:flyway-core:5.2.4')
    testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
   /* compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security.oauth:spring-security-oauth2:2.3.3.RELEASE')
    compile('org.springframework.security:spring-security-jwt:1.0.9.RELEASE')*/
    compile fileTree(dir: 'libs', include: 'shared-core-*.jar')
    testCompile fileTree(dir: 'libs', include: 'shared-test-*.jar')
}
